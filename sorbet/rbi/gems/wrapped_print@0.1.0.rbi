# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `wrapped_print` gem.
# Please instead update this file by running `bin/tapioca gem wrapped_print`.

# end
module WrappedPrint
  def level; end
  def level=(val); end
  def log_to; end
  def log_to=(val); end

  class << self
    def level; end
    def level=(val); end
    def log_to; end
    def log_to=(val); end

    # @yield [_self]
    # @yieldparam _self [WrappedPrint] the object that the method was called on
    def setup; end
  end
end

module WrappedPrint::Main
  def __wp__(label = T.unsafe(nil), pattern: T.unsafe(nil), count: T.unsafe(nil), prefix: T.unsafe(nil), suffix: T.unsafe(nil), color: T.unsafe(nil)); end
  def wp(label = T.unsafe(nil), pattern: T.unsafe(nil), count: T.unsafe(nil), prefix: T.unsafe(nil), suffix: T.unsafe(nil), color: T.unsafe(nil)); end

  private

  def blue(text); end
  def colorize(text, color_code); end
  def dark_blue(text); end
  def dark_green(text); end
  def detect_color_method(e); end
  def detect_logger_method; end
  def green(text); end
  def none(text); end
  def pur(text); end
  def red(text); end
  def yellow(text); end
end

WrappedPrint::Main::COLORS = T.let(T.unsafe(nil), Array)
WrappedPrint::Main::COUNT = T.let(T.unsafe(nil), Integer)
WrappedPrint::Main::PATTERN = T.let(T.unsafe(nil), String)
WrappedPrint::VERSION = T.let(T.unsafe(nil), String)
